{
  "name": "caged-bird",
  "author": "bitYogi",
  "version": "1.0.0",
  "private": true,
  "dependencies": {
    "axios": "^0.18.0",
    "concurrently": "^3.5.1",
    "drivelist": "^6.1.1",
    "electron-is-dev": "^0.3.0",
    "lodash": "^4.17.5",
    "material-ui": "^0.20.0",
    "q": "^1.5.1",
    "react": "^16.2.0",
    "react-dom": "^16.2.0",
    "react-redux": "^5.0.7",
    "react-router-dom": "^4.2.2",
    "react-router-redux": "^4.0.8",
    "react-scripts": "1.1.1",
    "redux": "^3.7.2",
    "redux-form": "^7.3.0",
    "redux-form-material-ui": "^4.3.3",
    "redux-thunk": "^2.2.0",
    "wait-on": "^2.1.0"
  },
  "main": "./public/main.js",
  "homepage": "./",
  "scripts": {
    "electron-start": "electron .",
    "react-start": "BROWSER=none react-scripts start",
    "wait-dev": "wait-on $ELECTRON_START_URL",
    "electron-dev": "run-s wait-dev electron-start",
    "start": "cross-env ELECTRON_START_URL=http://localhost:3000/ run-p react-start electron-dev",
    "build": "cross-env NODE_PATH=./src react-scripts build",
    "test": "react-scripts test --env=jsdom",
    "test:teamcity": "react-scripts test --env=jsdom --testResultsProcessor=jest-teamcity-reporter",
    "eject": "react-scripts eject",
    "package": "npm run build && build --publish never",
    "package-linux": "npm run build && build --c.extraMetadata.main=build/main.js --linux",
    "package-mac": "npm run build && build --c.extraMetadata.main=build/main.js --mac",
    "dev": "cross-env NODE_PATH=./src npm run start"
  },
  "devDependencies": {
    "axios-mock-adapter": "^1.14.1",
    "electron": "^1.8.4",
    "electron-builder": "^20.8.1",
    "electron-prebuilt": "^1.4.13",
    "enzyme": "^3.3.0",
    "foreman": "^2.0.0",
    "jest-teamcity-reporter": "^0.9.0",
    "npm-run-all": "^4.1.2",
    "react-app-env": "^1.2.0",
    "react-test-renderer": "^16.2.0",
    "redux-mock-store": "^1.5.1",
    "redux-testkit": "^1.0.6"
  },
  "build": {
    "productName": "CagedBird",
    "appId": "com.dacc.cagedbird",
    "extends": null,
    "files": [
      "build/**/*",
      "node_modules/**/*"
    ],
    "directories": {
      "buildResources": "assets"
    },
    "mac": {
      "artifactName": "${productName}-${version}-osx.${ext}",
      "category": "public.app-category.productivity",
      "target": [
        "dmg",
        "zip"
      ]
    },
    "linux": {
      "artifactName": "${productName}-${version}-${arch}-linux.${ext}",
      "maintainer": "bityogi",
      "target": [
        "tar.gz",
        "deb"
      ]
    },
    "win": {
      "target": [
        "zip",
        "dir"
      ]
    }
  }
}
